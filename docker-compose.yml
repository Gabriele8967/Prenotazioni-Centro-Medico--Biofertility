# Docker Compose per Server Proprietario Privato
# Sistema Prenotazioni Centro Medico

version: '3.8'

services:
  # Database MySQL
  mysql:
    image: mysql:8.0
    container_name: prenotazioni-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-PrenotazioniRoot2024!}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-prenotazioni_system}
      MYSQL_USER: ${MYSQL_USER:-prenotazioni}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-PrenotazioniUser2024!}
      TZ: Europe/Rome
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./init-data.sql:/docker-entrypoint-initdb.d/02-data.sql
    networks:
      - prenotazioni-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Applicazione Node.js
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: prenotazioni-app
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      
      # Database Configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${MYSQL_USER:-prenotazioni}
      DB_PASSWORD: ${MYSQL_PASSWORD:-PrenotazioniUser2024!}
      DB_NAME: ${MYSQL_DATABASE:-prenotazioni_system}
      
      # Server Configuration
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      
      # Email Configuration
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      COMPANY_EMAIL: ${COMPANY_EMAIL}
      COMPANY_PHONE: ${COMPANY_PHONE:-+39 06 123 4567}
      COMPANY_ADDRESS: ${COMPANY_ADDRESS:-Via Velletri 7, Roma, Italia}
      
      # Google Calendar Configuration
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      GOOGLE_REFRESH_TOKEN: ${GOOGLE_REFRESH_TOKEN}
      GOOGLE_CALENDAR_ID: ${GOOGLE_CALENDAR_ID}
      
      # Webhook Configuration
      WEBHOOK_URL: ${WEBHOOK_URL}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET:-sistema-prenotazioni-webhook}
      
      # Business Configuration
      PAYMENT_URL: ${PAYMENT_URL:-https://www.centroinfertilita.it/pagamento-personalizzato/}
      
      # Security
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - app_logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - prenotazioni-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: prenotazioni-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
      - app_logs:/var/log/app
    networks:
      - prenotazioni-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  prenotazioni-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local